<?php

namespace App\Filament\Resources {

	use App\Filament\Resources\KscinusGamesResource\Pages;
	use App\Models\Category;
	use App\Models\GamesKscinus;
	use Filament\Forms;
	use Filament\Forms\Form;
	use Filament\Resources\Resource;
	use Filament\Tables;
	use Filament\Tables\Table;

	class KscinusGamesResource extends Resource
	{
		protected static ?string $model = GamesKscinus::class;

		protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';

		protected static ?string $navigationLabel = 'Jogos Kscinus';

		protected static ?string $modelLabel = 'Jogos Kscinus';

		protected static ?string $navigationGroup = 'Meus Jogos';

		protected static ?string $slug = 'meus-jogos-kscinus';

		protected static ?string $recordTitleAttribute = 'name';

		protected static ?int $navigationSort = -1;

		/**
		 * @return string|null
		 */
		public static function getNavigationBadge(): ?string
		{
			return static::getModel()::count(); // TODO: Change the autogenerated stub
		}

		/**
		 * @return string|array|null
		 */
		public static function getNavigationBadgeColor(): string|array|null
		{
			return static::getModel()::count() > 5 ? 'success' : 'warning'; // TODO: Change the autogenerated stub
		}

		public static function form(Form $form): Form
		{
			return $form
				->schema([
					Forms\Components\Section::make('Games')
						->description('Cadastrando um jogo')
						->schema([
							Forms\Components\Group::make()
								->schema([
									Forms\Components\TextInput::make('title')
										->label('Nome do jogo')
										->placeholder('Digite o nome do jogo')
										->required()
										->maxLength(191),
									Forms\Components\TextInput::make('key')
										->label('Slug')
										->placeholder('Digite o slug do jogo')
										->required()
										->maxLength(191),
								])->columns(2),
							Forms\Components\Group::make()
								->schema([
									Forms\Components\Select::make('category_id')
										->label('Categoria')
										->placeholder('Selecione uma categoria')
										->relationship(name: 'category', titleAttribute: 'name')
										->options(
											fn ($get) => Category::query()
												->pluck('name', 'id')
										)
										->searchable()
										->preload()
										->live(),
									Forms\Components\Select::make('developer')
										->label('Desenvolvedor do jogo')
										->options([
											'pragmatic' => 'Pragmatic'
										])
										->searchable()
										->preload()
										->live()
								])->columns(2),
							Forms\Components\Group::make()
								->schema(
									[
										Forms\Components\FileUpload::make('cover')
											->label('Capa')
											->placeholder('Carregue a capa do jogo')
											->image()
											->required()
									]
								),
							Forms\Components\Textarea::make('description')
									->label('Descrição')
									->placeholder('Escreva a descrição do jogo')
									->autosize()
									->maxLength(2048),
							Forms\Components\Toggle::make('status')
								->label('Ativar Jogo')
								->default(true)
								->required()
								->columnSpanFull(),
						])
				]);
		}

		public static function table(Table $table): Table
		{
			return $table
				->columns([
					Tables\Columns\TextColumn::make('category.name')
						->label('Categoria')
						->numeric()
						->sortable(),
					Tables\Columns\TextColumn::make('title')
						->label('Nome')
						->searchable(),
					Tables\Columns\ImageColumn::make('cover')
						->label('Capa'),
					Tables\Columns\TextColumn::make('description')
						->label('Descrição')
						->toggleable(isToggledHiddenByDefault: true),
					Tables\Columns\ToggleColumn::make('status')
						->label('Ativo'),
					Tables\Columns\TextColumn::make('views')
						->label('Visualizações'),
					Tables\Columns\TextColumn::make('created_at')
						->label('Criação')
						->dateTime()
						->sortable()
						->toggleable(isToggledHiddenByDefault: true),
					Tables\Columns\TextColumn::make('updated_at')
						->label('Ultima Atualização')
						->dateTime()
						->sortable()
						->toggleable(isToggledHiddenByDefault: true),
				])
				->filters([
					//
				])
				->actions([
					Tables\Actions\EditAction::make(),
				])
				->bulkActions([
					Tables\Actions\BulkActionGroup::make([
						Tables\Actions\DeleteBulkAction::make(),
					]),
				])
				->emptyStateActions([
					Tables\Actions\CreateAction::make(),
				]);
		}

		public static function getRelations(): array
		{
			return [
				//
			];
		}

		public static function getPages(): array
		{
			return [
				'index' => Pages\ListKscinusGames::route('/'),
				'create' => Pages\CreateKscinusGames::route('/create'),
				'edit' => Pages\EditKscinusGames::route('/{record}/edit'),
			];
		}
	}
}
